---

import SunIcon from "./icons/Sun.astro"
import MoonIcon from "./icons/Moon.astro"
---

<div class="relative ml-1 mr-1">
  <button
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition relative"
  >
    <span class="sr-only">Cambiar tema</span>    
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />  
    <MoonIcon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
  </button>
</div>

<style>
  /* Por defecto se muestran uno u otro icono seg√∫n el estado */
  .theme-toggle-icon {
    transition: transform 0.2s ease;
  }
</style>

<script is:inline>
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");

  // Obtiene la preferencia actual, ya sea de localStorage o del sistema
  const getThemePreference = () => {
    return localStorage.getItem("theme") || (matchMedia.matches ? "dark" : "light");
  };

  // Actualiza los iconos para mostrar el estado actual 
  const updateIcons = (theme) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((el) => {
      el.style.scale = (el.id === theme) ? "1" : "0";
    });
  };

  // Actualiza el tema del documento y los iconos
  const updateTheme = () => {
    const theme = getThemePreference();
    const isDark = theme === "dark";
    document.documentElement.classList.toggle("dark", isDark);
    updateIcons(isDark ? "dark" : "light");
  };

  // Inicializa el tema
  updateTheme();

  // Al hacer clic se alterna entre temas y se guarda en localStorage
  document.getElementById("theme-toggle-btn").addEventListener("click", () => {
    const currentTheme = getThemePreference();
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    localStorage.setItem("theme", newTheme);
    updateTheme();
  });

  matchMedia.addEventListener("change", () => {
    if (!localStorage.getItem("theme")) {
      updateTheme();
    }
  });
</script>
